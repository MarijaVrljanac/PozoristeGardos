/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.form.karta;

import controller.ControllerClient;
import domain.Karta;
import domain.Nalog;
import domain.Predstava;
import domain.Rezervacija;
import domain.Scena;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import view.components.ModelTabeleKarta;
import view.components.ModelTabeleRezervisaneKarte;
import view.form.racun.RacunForm;

/**
 *
 * @author marij
 */
public class KupovinaForm extends javax.swing.JFrame {

    Nalog n;
    
    /**
     * Creates new form KupovinaForm
     */
    public KupovinaForm(Nalog n) {
        initComponents();
        setLocationRelativeTo(null);
        this.n = n;
        
        lblNalog.setText(n.getKorisnickoIme());
        ModelTabeleRezervisaneKarte mtk = new ModelTabeleRezervisaneKarte();
        tblKarta.setModel(mtk);
        
        ModelTabeleKarta mt = new ModelTabeleKarta();
        tblDodajKartu.setModel(mt);
      
        
         try {
            popuniScene();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error in view initialization: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        lblPozoriste = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblPredstava = new javax.swing.JLabel();
        lblRed = new javax.swing.JLabel();
        btnDodaj = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        cmbPredstava = new javax.swing.JComboBox();
        cmbRed = new javax.swing.JComboBox();
        cmbKolona = new javax.swing.JComboBox();
        lblKolona = new javax.swing.JLabel();
        lblScena = new javax.swing.JLabel();
        cmbScena = new javax.swing.JComboBox();
        lblDatumIVreme = new javax.swing.JLabel();
        cmbDatumIVreme = new javax.swing.JComboBox();
        btnPlati = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDodajKartu = new javax.swing.JTable();
        btnRezervisi = new javax.swing.JButton();
        lblNalog = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKarta = new javax.swing.JTable();
        txtPretraga = new javax.swing.JTextField();
        lblPronadji = new javax.swing.JLabel();
        btnOtkazivanjeKarte = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pozorište \"Gardoš\" - Kupovina karte");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/form/logo_pozoriste.png"))); // NOI18N

        lblPozoriste.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        lblPozoriste.setText("POZORIŠTE \"GARDOŠ\"");

        jLabel6.setText("Sibinjanin Janka bb");

        jLabel5.setText("11080, Zemun");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Odabir predstave"));

        lblPredstava.setText("Predstava:");

        lblRed.setText("Red:");

        btnDodaj.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnDodaj.setText("Dodaj kartu");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkaži");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        cmbPredstava.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPredstava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPredstavaActionPerformed(evt);
            }
        });

        cmbRed.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbKolona.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblKolona.setText("Kolona:");

        lblScena.setText("Scena:");

        cmbScena.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbScena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbScenaActionPerformed(evt);
            }
        });

        lblDatumIVreme.setText("Datum izvodjenja:");

        cmbDatumIVreme.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnPlati.setText("Plaćanje");
        btnPlati.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlatiActionPerformed(evt);
            }
        });

        tblDodajKartu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblDodajKartu);

        btnRezervisi.setText("Rezerviši");
        btnRezervisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRezervisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPredstava)
                            .addComponent(lblScena))
                        .addGap(84, 84, 84)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbPredstava, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbScena, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDatumIVreme)
                            .addComponent(lblRed)
                            .addComponent(lblKolona)
                            .addComponent(btnDodaj))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbKolona, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbRed, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbDatumIVreme, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(btnOtkazi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRezervisi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPlati)))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblScena)
                    .addComponent(cmbScena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPredstava)
                    .addComponent(cmbPredstava, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDatumIVreme)
                    .addComponent(cmbDatumIVreme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRed)
                    .addComponent(cmbRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblKolona)
                    .addComponent(cmbKolona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnOtkazi)
                    .addComponent(btnPlati)
                    .addComponent(btnRezervisi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblNalog.setText("jLabel4");

        jLabel1.setText("Zdravo, ");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Rezervisane karte"));

        tblKarta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblKarta);

        txtPretraga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPretragaKeyReleased(evt);
            }
        });

        lblPronadji.setText("Pronađi rezervisanu kartu:");

        btnOtkazivanjeKarte.setText("Otkazivanje rezervisane karte");
        btnOtkazivanjeKarte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkazivanjeKarteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblPronadji)
                        .addGap(18, 18, 18)
                        .addComponent(txtPretraga))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnOtkazivanjeKarte)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPronadji))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOtkazivanjeKarte))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(lblPozoriste, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNalog)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblPozoriste)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblNalog))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        try {
            Predstava p = (Predstava) cmbPredstava.getSelectedItem();
            Rezervacija r = new Rezervacija();
            
            String red = (String) cmbRed.getSelectedItem();
            int kolona = (int) cmbKolona.getSelectedItem();
            int kartaID = vratiKartaID();
            
            ModelTabeleKarta mtk = (ModelTabeleKarta) tblDodajKartu.getModel();
            
            if(cmbScena.getSelectedItem() != null){
                Scena scena = (Scena) cmbScena.getSelectedItem();
                if(scena.getScenaID() == 1){
                    Karta k = new Karta(p, n, kartaID, red, kolona, 1200.00, r);
                    boolean dostupno = ControllerClient.getInstance().proveriDostupnostKarte(k);
                        if(dostupno){
//                            new RacunForm(this, true, k, n, p, null).setVisible(true);
                                mtk.dodajKartu(k);
                        }
                    
                }else{
                    Karta k = new Karta(p, n, kartaID, red, kolona, 750.00, r);
                    boolean dostupno = ControllerClient.getInstance().proveriDostupnostKarte(k);
                        if(dostupno){
                            mtk.dodajKartu(k);
//                            new RacunForm(this, true, k, n, p, null).setVisible(true);
                        }
                    
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(KupovinaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
  
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        int red = tblDodajKartu.getSelectedRow();
        if(red != -1){
            ModelTabeleKarta mtk = (ModelTabeleKarta) tblDodajKartu.getModel();
            mtk.otkaziKartu(red);
        }
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void cmbPredstavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPredstavaActionPerformed
        if(cmbPredstava.getSelectedItem() != null){
            Predstava predstava = (Predstava) cmbPredstava.getSelectedItem();
            try {
                popuniDatumIVreme(predstava);
            } catch (Exception ex) {
                Logger.getLogger(KupiKartu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cmbPredstavaActionPerformed

    private void cmbScenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbScenaActionPerformed

        if(cmbScena.getSelectedItem() != null){
            Scena scena = (Scena) cmbScena.getSelectedItem();
            try {
                popuniPredstave(scena);
            } catch (Exception ex) {
                Logger.getLogger(KupiKartu.class.getName()).log(Level.SEVERE, null, ex);
            }

            cmbRed.removeAllItems();

            if(scena.getScenaID() == 1){
                cmbRed.addItem("I");
                cmbRed.addItem("II");
                cmbRed.addItem("III");
                cmbRed.addItem("IV");
                cmbRed.addItem("V");
                cmbRed.addItem("VI");
                cmbRed.addItem("VII");
                cmbRed.addItem("VIII");
                cmbRed.addItem("IX");
                cmbRed.addItem("X");
                cmbRed.addItem("XI");
                cmbRed.addItem("XII");
            }else{
                cmbRed.addItem("I");
                cmbRed.addItem("II");
                cmbRed.addItem("III");
                cmbRed.addItem("IV");
                cmbRed.addItem("V");
                cmbRed.addItem("VI");
            }

            cmbKolona.removeAllItems();

            if(scena.getScenaID() == 1){
                for (int i = 1; i <= 15; i++) {
                    cmbKolona.addItem(i);
                }
            }else{
                for (int i = 1; i <= 10; i++) {
                    cmbKolona.addItem(i);
                }
            }
        }
    }//GEN-LAST:event_cmbScenaActionPerformed

    private void btnPlatiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlatiActionPerformed
        Predstava p = (Predstava) cmbPredstava.getSelectedItem();
        
        ModelTabeleKarta mtk = (ModelTabeleKarta) tblDodajKartu.getModel();
        
        ArrayList<Karta> karte = mtk.getLista();
        
        for (Karta karta : karte) {
            new RacunForm(this, true, karta, n, p, null).setVisible(true);
        }
       
    }//GEN-LAST:event_btnPlatiActionPerformed

    private void btnRezervisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRezervisiActionPerformed
        ModelTabeleKarta mtr = (ModelTabeleKarta) tblDodajKartu.getModel();

        ArrayList<Karta> nove = mtr.getLista();

        ModelTabeleRezervisaneKarte mtrk = (ModelTabeleRezervisaneKarte) tblKarta.getModel();
        
        if (nove.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Niste uneli nijednu rezervaciju!");
            return;
        }else{
            for (Karta karta : nove) {
                try {
                    ControllerClient.getInstance().sacuvajKartu(karta);
                    JOptionPane.showMessageDialog(this, "Uspešno ste rezervisali kartu!");
                    mtrk.osveziTabelu();
                } catch (Exception ex) {
                    Logger.getLogger(KupiKartu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_btnRezervisiActionPerformed

    private void txtPretragaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaKeyReleased
        String parametar = txtPretraga.getText();
        ModelTabeleRezervisaneKarte mtrk = (ModelTabeleRezervisaneKarte) tblKarta.getModel();
        mtrk.setParametar(parametar);
    }//GEN-LAST:event_txtPretragaKeyReleased

    private void btnOtkazivanjeKarteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkazivanjeKarteActionPerformed
       int red = tblKarta.getSelectedRow();
        if(red != -1){
            try {
                ModelTabeleRezervisaneKarte mtk = (ModelTabeleRezervisaneKarte) tblKarta.getModel();
                Karta k = mtk.getSelectedKarta(red);
                ControllerClient.getInstance().deleteKarta(k);
                JOptionPane.showMessageDialog(this, "Uspešno otkazana rezervisana karta!");
                mtk.osveziTabelu();
            } catch (Exception ex) {
                Logger.getLogger(KupovinaForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnOtkazivanjeKarteActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnOtkazivanjeKarte;
    private javax.swing.JButton btnPlati;
    private javax.swing.JButton btnRezervisi;
    private javax.swing.JComboBox cmbDatumIVreme;
    private javax.swing.JComboBox cmbKolona;
    private javax.swing.JComboBox cmbPredstava;
    private javax.swing.JComboBox cmbRed;
    private javax.swing.JComboBox cmbScena;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDatumIVreme;
    private javax.swing.JLabel lblKolona;
    private javax.swing.JLabel lblNalog;
    private javax.swing.JLabel lblPozoriste;
    private javax.swing.JLabel lblPredstava;
    private javax.swing.JLabel lblPronadji;
    private javax.swing.JLabel lblRed;
    private javax.swing.JLabel lblScena;
    private javax.swing.JTable tblDodajKartu;
    private javax.swing.JTable tblKarta;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables

       private void popuniScene() {

        try {
            cmbScena.removeAllItems();
            

            ArrayList<Scena> lista = (ArrayList<Scena>) ControllerClient.getInstance().getAllScene();

            for (Scena scena : lista) {
                cmbScena.addItem(scena);
            }

            popuniPredstave(lista.get(0));
                    } catch (Exception ex) {
                        Logger.getLogger(KupovinaForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }
    
    private void popuniPredstave(Scena scena) {
        try {
            cmbPredstava.removeAllItems();
            
            
            ArrayList<Predstava> lista = (ArrayList<Predstava>) ControllerClient.getInstance().getPredstave(scena);
            
            for (Predstava predstava : lista) {
                cmbPredstava.addItem(predstava);
            }
            
            popuniDatumIVreme(lista.get(0));
        } catch (Exception ex) {
            Logger.getLogger(KupovinaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }

    private void popuniDatumIVreme(Predstava p) {
    try {
        cmbDatumIVreme.removeAllItems();
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy. HH:mm");
        
        
         ArrayList<Date> lista = (ArrayList<Date>) ControllerClient.getInstance().getAllDatumi(p);
         
         for (Date datum : lista) {
            cmbDatumIVreme.addItem(sdf.format(datum));
        }
        } catch (Exception ex) {
            Logger.getLogger(KupovinaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void dodajKartu(Karta k) throws Exception {
        ControllerClient.getInstance().sacuvajKartu(k);
    }

    private int vratiKartaID() throws Exception {
        int kartaID = (int) ControllerClient.getInstance().vratiKartaID();
        
        return kartaID;
    }



}
