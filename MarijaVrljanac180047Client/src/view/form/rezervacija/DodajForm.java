/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.form.rezervacija;


import controller.ControllerClient;
import domain.Predstava;
import domain.Rezervacija;
import domain.Scena;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author marij
 */
public class DodajForm extends javax.swing.JDialog {

//    Mozda: 
//    Scena s;
    Predstava p;
//    ILI
//    ArrayList<Scena> scene;
//    ArrayList<Predstava> predstave;
    
    
    /**
     * Creates new form DodajForm
     */
    public DodajForm(java.awt.Frame parent, boolean modal, Predstava p) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);  
        this.p = p;
        try {
            popuniScene();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error in view initialization: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        cmbScena.setSelectedItem(p.getScena());
        cmbPredstava.setSelectedItem(p);
        cmbDatumIVreme.setSelectedItem(p.getDatumIzvodjenja());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblPredstava = new javax.swing.JLabel();
        lblImePrezime = new javax.swing.JLabel();
        txtImePrezime = new javax.swing.JTextField();
        cmbPredstava = new javax.swing.JComboBox();
        btnDodaj = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        lblScena = new javax.swing.JLabel();
        cmbScena = new javax.swing.JComboBox();
        lblDatumIVreme = new javax.swing.JLabel();
        cmbDatumIVreme = new javax.swing.JComboBox();
        lblBrojKarata = new javax.swing.JLabel();
        txtlblBrojKarata = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lblPozoriste = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pozorište \"Gardoš\" - Rezervacija");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dodaj novu rezervaciju"));

        lblPredstava.setText("Predstava:");

        lblImePrezime.setText("Ime i prezime:");

        txtImePrezime.setText("Marija Vrljanac");

        cmbPredstava.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPredstava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPredstavaActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj rezervaciju");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        lblScena.setText("Scena:");

        cmbScena.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbScena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbScenaActionPerformed(evt);
            }
        });

        lblDatumIVreme.setText("Datum izvodjenja:");

        cmbDatumIVreme.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDatumIVreme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDatumIVremeActionPerformed(evt);
            }
        });

        lblBrojKarata.setText("Broj karata:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblScena)
                            .addComponent(lblPredstava))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbPredstava, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbScena, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDodaj)
                        .addGap(18, 18, 18)
                        .addComponent(btnOtkazi)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblImePrezime)
                            .addComponent(lblDatumIVreme)
                            .addComponent(lblBrojKarata))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtlblBrojKarata)
                            .addComponent(cmbDatumIVreme, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtImePrezime))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblScena)
                    .addComponent(cmbScena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPredstava)
                    .addComponent(cmbPredstava, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblImePrezime)
                    .addComponent(txtImePrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDatumIVreme)
                    .addComponent(cmbDatumIVreme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtlblBrojKarata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBrojKarata))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnOtkazi))
                .addContainerGap())
        );

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/form/logo_pozoriste.png"))); // NOI18N

        lblPozoriste.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        lblPozoriste.setText("POZORIŠTE \"GARDOŠ\"");

        jLabel6.setText("Sibinjanin Janka bb");

        jLabel5.setText("11080, Zemun");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(lblPozoriste, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblPozoriste)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        if(txtImePrezime.getText().isEmpty() || txtlblBrojKarata.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena!");
            return;
        }
        
        Scena scena = (Scena) cmbScena.getSelectedItem();
        Predstava predstava = (Predstava) cmbPredstava.getSelectedItem();
        String imePrezime = txtImePrezime.getText();
        int brojKarata = Integer.parseInt(txtlblBrojKarata.getText());
        
        if(brojKarata < 1){
            JOptionPane.showMessageDialog(this, "Broj sedista ne sme biti manji od 1!");
                return;
        }
        
        if(brojKarata > scena.getKapacitet()){
            JOptionPane.showMessageDialog(this, "Broj sedista mora biti jednak ili manji od dostupnih sedista");
                return;
        }
        
        RezervacijeForm mfc = (RezervacijeForm) getParent();
        
        Rezervacija r = new Rezervacija(predstava, mfc.getN(), -1, imePrezime, new Date(), brojKarata);
        
        r.getPredstava().getScena().setKapacitet(r.getPredstava().getScena().getKapacitet() - brojKarata);
        
        mfc.dodajRezervaciju(r);
        
        
        
        
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void cmbScenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbScenaActionPerformed
       if(cmbScena.getSelectedItem() != null){
            Scena scena = (Scena) cmbScena.getSelectedItem();
           try {
               popuniPredstave(scena);
           } catch (Exception ex) {
               Logger.getLogger(DodajForm.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
    }//GEN-LAST:event_cmbScenaActionPerformed

    private void cmbPredstavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPredstavaActionPerformed
         if(cmbPredstava.getSelectedItem() != null){
            Predstava predstava = (Predstava) cmbPredstava.getSelectedItem();
             try {
                 popuniDatumIVreme(predstava);
             } catch (Exception ex) {
                 Logger.getLogger(DodajForm.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
    }//GEN-LAST:event_cmbPredstavaActionPerformed

    private void cmbDatumIVremeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDatumIVremeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDatumIVremeActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JComboBox cmbDatumIVreme;
    private javax.swing.JComboBox cmbPredstava;
    private javax.swing.JComboBox cmbScena;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblBrojKarata;
    private javax.swing.JLabel lblDatumIVreme;
    private javax.swing.JLabel lblImePrezime;
    private javax.swing.JLabel lblPozoriste;
    private javax.swing.JLabel lblPredstava;
    private javax.swing.JLabel lblScena;
    private javax.swing.JTextField txtImePrezime;
    private javax.swing.JTextField txtlblBrojKarata;
    // End of variables declaration//GEN-END:variables

    

    private void popuniScene() {

        try {
            cmbScena.removeAllItems();
            

            ArrayList<Scena> lista = (ArrayList<Scena>) ControllerClient.getInstance().getAllScene();

            for (Scena scena : lista) {
                cmbScena.addItem(scena);
            }

            popuniPredstave(lista.get(0));
        } catch (Exception ex) {
            Logger.getLogger(IzmeniForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void popuniPredstave(Scena scena) {
        try {
            cmbPredstava.removeAllItems();
            
            
            ArrayList<Predstava> lista = (ArrayList<Predstava>) ControllerClient.getInstance().getPredstave(scena);
            
            for (Predstava predstava : lista) {
                cmbPredstava.addItem(predstava);
            }
            
            popuniDatumIVreme(lista.get(0));
        } catch (Exception ex) {
            Logger.getLogger(IzmeniForm.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }

    private void popuniDatumIVreme(Predstava p) {
    try {
        cmbDatumIVreme.removeAllItems();
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy. HH:mm");
        
        
         ArrayList<Date> lista = (ArrayList<Date>) ControllerClient.getInstance().getAllDatumi(p);
         
         for (Date datum : lista) {
            cmbDatumIVreme.addItem(sdf.format(datum));
        }
        } catch (Exception ex) {
            Logger.getLogger(IzmeniForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
