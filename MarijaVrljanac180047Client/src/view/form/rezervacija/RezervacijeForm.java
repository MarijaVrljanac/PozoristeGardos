/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.form.rezervacija;

import controller.ControllerClient;
import domain.Nalog;
import domain.Predstava;
import domain.Rezervacija;
import java.net.SocketException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import view.components.ModelTabelePredstava;
import view.components.ModelTabeleRezervacije;
import view.form.karta.KupiKartu;

/**
 *
 * @author marij
 */
public class RezervacijeForm extends javax.swing.JFrame {

    Nalog n;


    public Nalog getN() {
        return n;
    }
    
    
    /**
     * Creates new form RezervacijeForm
     */
    public RezervacijeForm(Nalog n) {
        initComponents();
        
        setLocationRelativeTo(null);
        this.n = n;

        ModelTabeleRezervacije mtr = new ModelTabeleRezervacije();
        tblRezervacije.setModel(mtr);
        ModelTabelePredstava mtp = new ModelTabelePredstava();
        tblPredstava.setModel(mtp);
        
        try {
            popuniPredstave();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error in view initialization: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblPozoriste = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRezervacije = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnPotvrdi = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnKupi = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPredstava = new javax.swing.JTable();
        txtPretraga = new javax.swing.JTextField();
        lblPretragaRez = new javax.swing.JLabel();
        txtPretragaRezervacije = new javax.swing.JTextField();
        btnDetalji = new javax.swing.JButton();
        btnNazad = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pozorište \"Gardoš\" - Rezervacije");

        jLabel5.setText("11080, Zemun");

        jLabel6.setText("Sibinjanin Janka bb");

        lblPozoriste.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        lblPozoriste.setText("POZORIŠTE \"GARDOŠ\"");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/form/logo_pozoriste.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Odabir predstave"));

        tblRezervacije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRezervacije);

        btnDodaj.setText("Dodaj rezervaciju");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši rezervaciju");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnPotvrdi.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnPotvrdi.setText("Potvrdi");
        btnPotvrdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPotvrdiActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni rezervaciju");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        jLabel3.setText("Naziv predstave:");

        btnKupi.setText("Kupi kartu");
        btnKupi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKupiActionPerformed(evt);
            }
        });

        tblPredstava.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblPredstava);

        txtPretraga.setText("Nova predstava");
        txtPretraga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPretragaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPretragaKeyReleased(evt);
            }
        });

        lblPretragaRez.setText("Pretraga rezervacije:");

        txtPretragaRezervacije.setText("Nova predstava");
        txtPretragaRezervacije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPretragaRezervacijeActionPerformed(evt);
            }
        });
        txtPretragaRezervacije.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPretragaRezervacijeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPretragaRezervacijeKeyReleased(evt);
            }
        });

        btnDetalji.setText("Detalji");
        btnDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtPretraga))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblPretragaRez)
                        .addGap(18, 18, 18)
                        .addComponent(txtPretragaRezervacije))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnPotvrdi)
                        .addGap(76, 76, 76)
                        .addComponent(btnDetalji, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(69, 69, 69)
                        .addComponent(btnKupi))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDodaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisi)
                        .addGap(18, 18, 18)
                        .addComponent(btnIzmeni)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPretragaRez)
                    .addComponent(txtPretragaRezervacije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi)
                    .addComponent(btnIzmeni))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPotvrdi)
                    .addComponent(btnDetalji)
                    .addComponent(btnKupi))
                .addGap(72, 72, 72))
        );

        btnNazad.setText("Nazad");
        btnNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNazadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(lblPozoriste, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNazad)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblPozoriste)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNazad)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        int red = tblPredstava.getSelectedRow();
        if(red != -1){
            ModelTabelePredstava mtp = (ModelTabelePredstava) tblPredstava.getModel();
            Predstava p = mtp.vratiPredstavu(red);
            new DodajForm(this, true, p).setVisible(true);
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int red = tblRezervacije.getSelectedRow();

        if(red != -1){
            ModelTabeleRezervacije mtr = (ModelTabeleRezervacije) tblRezervacije.getModel();
            mtr.obrisiRezervaciju(red);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnPotvrdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPotvrdiActionPerformed
//        try {
//            if(txtPretraga.getText().isEmpty()){
//                JOptionPane.showMessageDialog(this, "Unesite parametre za pretragu!");
//                return;
//            }
//
//            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy. HH:mm");
//
//            String nazivPredstave = txtPretraga.getText();
//
//            ModelTabeleRezervacije mtr = (ModelTabeleRezervacije) tblRezervacije.getModel();
//            ArrayList<Rezervacija> rezervacije = mtr.getLista();
//
//            p.setRezervacije(rezervacije);
//
//            boolean uspesno = (boolean) ControllerClient.getInstance().sacuvajRezervacije(p);
//
//            if(uspesno){
//                JOptionPane.showMessageDialog(this, "Uspesno sacuvano!");
//            }else{
//                JOptionPane.showMessageDialog(this, "Nije uspesno sacuvano...");
//            }
//
//        } catch (ParseException ex) {
//            Logger.getLogger(RezervacijeForm.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (Exception ex) {
//            Logger.getLogger(RezervacijeForm.class.getName()).log(Level.SEVERE, null, ex);
//        }



        ModelTabeleRezervacije mtr = (ModelTabeleRezervacije) tblRezervacije.getModel();
        
        ArrayList<Rezervacija> rezervacije = mtr.getLista();
     
            if (rezervacije.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Niste uneli nijednu rezervaciju!");
                return;
            }else{
                for (Rezervacija rezervacija : rezervacije) {
                    try {
                       boolean uspesno =  ControllerClient.getInstance().addRezervacija(rezervacija);
                       
                       if(uspesno){
                           JOptionPane.showMessageDialog(this, "Uspesno rezervisano!");
                       }
                       else{
                           JOptionPane.showMessageDialog(this, "Došlo je do greške...");
                       }
                    } catch (Exception ex) {
                        Logger.getLogger(RezervacijeForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

      

           

            this.dispose();

        
    }//GEN-LAST:event_btnPotvrdiActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        int red = tblRezervacije.getSelectedRow();

        if(red != -1){
            ModelTabeleRezervacije mtr = (ModelTabeleRezervacije) tblRezervacije.getModel();
            Rezervacija r = mtr.vratiRezervaciju(red);
            System.out.println(r.getPredstava().getScena());
            System.out.println(r.getPredstava());

            new IzmeniForm(this, true, r).setVisible(true);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnKupiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKupiActionPerformed
        int red = tblPredstava.getSelectedRow();

        ModelTabelePredstava mtp = (ModelTabelePredstava) tblPredstava.getModel();
        Predstava p = mtp.vratiPredstavu(red);

        int red2 = tblRezervacije.getSelectedRow();

        ModelTabeleRezervacije mtr = (ModelTabeleRezervacije) tblRezervacije.getModel();
        Rezervacija r = mtr.vratiRezervaciju(red2);

        new KupiKartu(n, p, r).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnKupiActionPerformed

    private void txtPretragaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPretragaKeyPressed

    private void txtPretragaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaKeyReleased
        String parametar = txtPretraga.getText();
        ModelTabelePredstava mtp = (ModelTabelePredstava) tblPredstava.getModel();
        mtp.setParametar(parametar);
    }//GEN-LAST:event_txtPretragaKeyReleased

    private void txtPretragaRezervacijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPretragaRezervacijeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPretragaRezervacijeActionPerformed

    private void txtPretragaRezervacijeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaRezervacijeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPretragaRezervacijeKeyPressed

    private void txtPretragaRezervacijeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaRezervacijeKeyReleased
        String parametar = txtPretragaRezervacije.getText();
        ModelTabeleRezervacije mtr = (ModelTabeleRezervacije) tblRezervacije.getModel();
        mtr.setParametar(parametar);
    }//GEN-LAST:event_txtPretragaRezervacijeKeyReleased

    private void btnDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljiActionPerformed
        int red = tblRezervacije.getSelectedRow();

        if(red != -1){
            ModelTabeleRezervacije mtr = (ModelTabeleRezervacije) tblRezervacije.getModel();
            Rezervacija rez = mtr.vratiRezervaciju(red);

            JOptionPane.showMessageDialog(this, rez.info());
        }
    }//GEN-LAST:event_btnDetaljiActionPerformed

    private void btnNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNazadActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnNazadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetalji;
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnKupi;
    private javax.swing.JButton btnNazad;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPotvrdi;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblPozoriste;
    private javax.swing.JLabel lblPretragaRez;
    private javax.swing.JTable tblPredstava;
    private javax.swing.JTable tblRezervacije;
    private javax.swing.JTextField txtPretraga;
    private javax.swing.JTextField txtPretragaRezervacije;
    // End of variables declaration//GEN-END:variables

   void dodajRezervaciju(Rezervacija r) {
        ModelTabeleRezervacije mtr = (ModelTabeleRezervacije) tblRezervacije.getModel();
        mtr.dodajRezervaciju(r);
    }

    void izmeniRezervaciju(Rezervacija r) {
        ModelTabeleRezervacije mtr = (ModelTabeleRezervacije) tblRezervacije.getModel();
        int red = tblRezervacije.getSelectedRow();
        mtr.izmeniRezervaciju(red, r);
    }

     private void popuniPredstave() throws Exception {
            List<Predstava> predstave = ControllerClient.getInstance().getAllPredstave();
            
            ModelTabelePredstava mtp = (ModelTabelePredstava) tblPredstava.getModel();
            
            mtp.dodajPredstave((ArrayList<Predstava>) predstave);
    }
     
//    private void popuniRezervacije() throws Exception {
//            List<Rezervacija> rezervacije = ControllerClient.getInstance().getAllRezervacije();
//            
//            ModelTabeleRezervacije mtr = (ModelTabeleRezervacije) tblRezervacije.getModel();
//            
//            mtr.dodajRezervacije((ArrayList<Rezervacija>) rezervacije);
//    }



}
